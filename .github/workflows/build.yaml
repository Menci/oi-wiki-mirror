name: Build and Deploy

on:
  workflow_dispatch:
    inputs:
      ref:
        description: The ref of OI Wiki's main repo.
        required: true

jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
    - name: Wait for previous deployment
      uses: softprops/turnstyle@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout
      uses: actions/checkout@v2
    - name: Checkout OI-wiki
      uses: actions/checkout@v2
      with:
        repository: OI-wiki/OI-wiki
        ref: ${{ github.event.inputs.ref }}
        path: OI-wiki
    - name: Set up Node
      uses: actions/setup-node@v2
      with:
        node-version: 17.x
        check-latest: true
    - name: Install dependencies
      run: yarn --frozen-lockfile
    - name: Build
      run: yarn ts-node build.ts
    - name: Inject Service Worker
      uses: Menci/service-worker-redirect-origin@main
      with:
        www-root: OI-wiki
        target-base-url: https://cdn-static.menci.xyz/oi-wiki/
        http-404-page: 404.html
    - id: commit-push
      name: Push to GitHub
      run: |
        git config --global user.name $(git show -s --format='%an' HEAD)
        git config --global user.email $(git show -s --format='%ae' HEAD)

        cd OI-wiki

        git add .
        git commit -am "Upload mirror site on $(date '+%Y-%m-%d %H:%M:%S')"
        git remote add mirror git@github.com:MenciStaticSites/oi-wiki.git
        git fetch --unshallow origin
        eval `ssh-agent -s`
        echo "$SSH_KEY" | tr -d '\r' | ssh-add -
        git push -f mirror HEAD:main

        echo "::set-output commit-hash=$(git rev-parse HEAD)"
        rm -rf .git
      env:
        SSH_KEY: ${{ secrets.DEPLOY_KEY_TARGET }}
    - name: Deploy to Aliyun OSS
      uses: Menci/upload-to-oss@main
      with:
          access-key-id: ${{ secrets.ALIYUN_ACCESS_KEY_ID }}
          access-key-secret: ${{ secrets.ALIYUN_ACCESS_KEY_SECRET }}
          bucket: ${{ secrets.ALIYUN_OSS_BUCKET }}
          endpoint: ${{ secrets.ALIYUN_OSS_ENDPOINT }}
          local-path: OI-wiki
          remote-path: oi-wiki
          headers: |
            filename => (
              {
                "Cache-Control": `public, max-age=${filename.endsWith(".html") ? 60 : 604800}`
              }
            )
          delay-html-file-upload: true
    - name: Wait for Cloudflare Pages Deployment
      uses: Menci/cf-pages-await@main
      with:
        accountEmail: ${{ secrets.CLOUDFLARE_ACCOUNT_EMAIL }}
        apiKey: ${{ secrets.CLOUDFLARE_API_KEY }}
        accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        project: menci-oi-wiki
        commitHash: ${{ steps.commit-push.outputs.commit-hash }}
      continue-on-error: true
    - name: Deploy to Azure Static Web App
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        action: upload
        app_location: /OI-wiki
        skip_app_build: true
        config_file_location: .
